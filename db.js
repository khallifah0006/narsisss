const dbPromise=indexedDB.open("stories-db",1),StoryDB={saveStory:e=>{indexedDB.open("stories-db",1).onsuccess=o=>{o.target.result.transaction("stories","readwrite").objectStore("stories").put(e),console.log("Story saved successfully:",e)}},deleteStory:e=>{indexedDB.open("stories-db",1).onsuccess=o=>{o.target.result.transaction("stories","readwrite").objectStore("stories").delete(e),console.log(`Story with ID ${e} deleted!`)}},getStories:()=>new Promise(((e,o)=>{indexedDB.open("stories-db",1).onsuccess=s=>{const r=s.target.result.transaction("stories","readonly").objectStore("stories").getAll();r.onsuccess=()=>e(r.result),r.onerror=e=>o(e.target.error)}}))};dbPromise.onupgradeneeded=e=>{const o=e.target.result;o.objectStoreNames.contains("stories")||o.createObjectStore("stories",{keyPath:"id"}),console.log("IndexedDB structure created!")},dbPromise.onsuccess=e=>{console.log("IndexedDB opened successfully!")},dbPromise.onerror=e=>{console.error("Error opening IndexedDB:",e.target.error)};